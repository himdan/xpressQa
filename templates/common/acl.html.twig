{% extends 'base.html.twig' %}
{% block stylesheets %}
    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="{{ asset('plugins/fontawesome-free/css/all.min.css') }}">
    <link rel="stylesheet" href="{{ asset('plugins/icheck-bootstrap/icheck-bootstrap.min.css') }}">
    <link rel="stylesheet" href="{{ asset('dist/css/adminlte.min.css') }}">
    <style>
        .fancy1 {
        }

        .fancy {
            /*transform: rotate(-90deg) translateX(-5px);*/
            /*height: 160px;*/
        }
        .view {
            margin: auto;
            width: 600px;
        }

        .wrapper {
            position: relative;
            overflow: auto;
            border: 1px solid black;
            white-space: nowrap;
        }

        .sticky-col {
            position: -webkit-sticky;
            position: sticky;
            background-color: white;
        }

        .first-col {
            width: 150px;
            min-width: 150px;
            max-width: 150px;
            left: 0px;
        }

        .second-col {
            width: 150px;
            min-width: 150px;
            max-width: 150px;
            left: 100px;
            border-right: 1px black!important;
        }
    </style>
{% endblock %}
{% block body_class %}{% endblock %}
{% block body %}
    <div class="container">
        <form name="matrix" method="post" class="w-100" >
            <div id="table-container" class="wrapper"></div>
            <div class="action-block mt-2">
                <button type="submit" class="btn btn-primary">submit</button>
                <button type="reset" class="btn btn-outline-dark">Reset</button>
            </div>
        </form>
    </div>
{% endblock %}
{% block lastJs %}
    <script src="{{ asset('plugins/jquery/jquery.min.js') }}"></script>
    <script src="{{ asset('plugins/bootstrap/js/bootstrap.bundle.min.js') }}"></script>
    <script>
        (function ($) {
            $.fn.radioTd = function (config={}) {
                return this.each(function () {
                    let permission = $(this).data('permission')
                    let name = $(this).data('name')
                    let currentModule = config['m'];
                    let currentRole = config['r']
                    let applied = config['applied']


                    let nameProp = `${name}[]`
                    $(this).on('change', function (e) {
                        if($(e.target).is(':checked')){
                            console.log('checked')
                            if(config['selector']){
                                $(config['selector']).each(function () {
                                    $(this).find(':input').each(function () {
                                        $(this).prop('checked', true)
                                    })
                                })
                            }
                        }else {
                            console.log(' not checked')
                        }
                    })
                    const $input = $(`<input type="checkbox"/>`)
                    $input.prop('name', nameProp);
                    $input.val(permission)
                    if(currentRole && applied && currentModule){
                        $input.attr('checked', applied[currentRole]?applied[currentRole].some(p=>p ===permission):false)
                    }
                    $input.appendTo($(this));
                    if(config['wrap']){
                        let $y = $('<span>check all</span>')
                        $y.appendTo($(this))
                    }
                })
            }
            $.ajax({
                url: Routing.generate('acl_list', {}),
                success: (context) => {
                    const data = context['matrix']
                    const roleList = Object.keys(context['roles']);
                    const applied = context['applied'];
                    const $table = $('<table></table>')
                    const $thead = $('<thead></thead>')
                    const $tbody = $('<tbody ></tbody >')
                    const $tr1 = $('<tr></tr>')
                    const $tr2 = $('<tr></tr>')
                    const $th00 = $('<th>Feature</th>')
                    $th00.addClass('sticky-col')
                    $th00.addClass('first-col')
                    const $th01 = $('<th>Permission</th>')
                    $th01.addClass('sticky-col')
                    $th01.addClass('first-col')
                    $th00.appendTo($tr1)
                    $th01.appendTo($tr2)
                    Object.keys(data).forEach((m) => {
                        const $td = $('<th colspan="' + data[m].length + '"> ' + m + '</th>')
                        $td.addClass('fancy1')
                        $td.appendTo($tr1)
                        data[m].forEach((p) => {
                            const $td2 = $('<th> ' + p['permission'] + '</th>')
                            $td2.addClass('fancy')
                            $td2.appendTo($tr2)
                        })

                    });

                    roleList.forEach((r) => {
                        let $l = $('<tr></tr>');
                        let $td = $('<th rowspan="2">' + r + '</th>');
                        $td.addClass('text-left')
                        $td.addClass('sticky-col')
                        $td.addClass('first-col')
                        $td.appendTo($l);
                        let $l2 = $('<tr></tr>');
                        Object.keys(data).forEach((m) => {
                            data[m].forEach((p) => {
                                let $tdl = $('<td></td>')
                                $tdl.addClass(r.toLowerCase())
                                $tdl.addClass(m.toLowerCase().replaceAll(' ', '_'))
                                $tdl.data('name', r);
                                $tdl.data('permission', p['permission'])
                                $tdl.radioTd({applied, r,m})
                                $tdl.appendTo($l)
                            });
                            let  $tx = $('<td></td>')
                            $tx.addClass('text-left')
                            $tx.attr('colspan', data[m].length)
                            if(data[m].length>1){
                                $tx.addClass(r.toLowerCase())
                                $tx.addClass(m.toLowerCase().replaceAll(' ', '_'))
                                $tx.radioTd({'wrap':true,'selector':`td.${r.toLowerCase()}.${m.toLowerCase().replaceAll(' ', '_')}`, applied,r,m})
                            }
                            $tx.appendTo($l2)
                        })
                        $l.appendTo($tbody)
                        $l2.appendTo($tbody)
                    })


                    $tr1.appendTo($thead)
                    $tr2.appendTo($thead)
                    $thead.appendTo($table)
                    $tbody.appendTo($table)
                    $table.addClass('table-bordered')
                    $table.addClass('text-center')
                    document.getElementById('table-container').append($table[0]);
                }
            })
        })($)
    </script>
{% endblock %}
