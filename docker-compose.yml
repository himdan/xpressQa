version: "3.4"
x-php-common:
  &php-common
  image: php-fpm-common:latest
  build:
    context: .
    target: symfony_php
    args:
      SYMFONY_VERSION: ${SYMFONY_VERSION:-}
      SKELETON: ${SKELETON:-symfony/skeleton}
      STABILITY: ${STABILITY:-stable}
      PHP_VERSION: ${PHP_VERSION:-7.4}
  environment:
    # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
    DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}?serverVersion=${POSTGRES_VERSION}
    # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
    MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
    MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
    MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
services:
  redis:
    image: "redis:alpine"
    hostname: redis
    ports:
      - "6379:6379"
  mail:
    container_name: sys_mail
    restart: unless-stopped
    image: eaudeweb/mailtrap
    ports:
      - "8125:80"
      - "2525:25"
    environment:
      - MT_USER=${MT_USER:-mailtrap}
      - MT_PASSWD=${MT_PASSWD:-mailtrap}
      - MT_MAILBOX_LIMIT=512000001
      - MT_MESSAGE_LIMIT=102400001  
  php:
    <<: *php-common
    restart: unless-stopped
    links:
      - database
      - mail
      - redis
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
      
  invitation-consumer:
    <<: *php-common
    restart: on-failure
    volumes:
      # The "cached" option has no effect on Linux but improves performance on Mac
      - ./:/srv/app:rw,cached
      - ./docker/php/conf.d/symfony.dev.ini:/usr/local/etc/php/conf.d/symfony.ini
    depends_on:
      - php
    links:
      - database
      - mail
      - redis
    command: "php bin/console messenger:consume invitation_transport -vv"  

  caddy:
    build:
      context: .
      target: symfony_caddy
    depends_on:
      - php
      - pgadmin
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost,  caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
###< doctrine/doctrine-bundle ###

volumes:
  php_socket:
  caddy_data:
  caddy_config:
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

###> doctrine/doctrine-bundle ###
  db-data:
  pgadmin-data:
###< doctrine/doctrine-bundle ###
